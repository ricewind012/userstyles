/* ==UserStyle==
@name           Soundcloud
@namespace      github.com/openstyles/stylus
@version        2.0.0
@description    A new userstyle
@author         Me

@preprocessor   stylus
==/UserStyle== */

// Variables
vendors = official;
$small-screen = 768px;
$select-shadow = inset 0 1px 2px rgba(0, 0, 0, 0.1);
$select-size = 16px;
$i = !important;

// Stylus
svar(var) {
	s('var(--%s)', var);
}

cond(n, yes, no) {
	(n == 0 ? no : yes) $i;
}

sel-cond(sel, pos) {
	pos ? s('%s-%s', sel, pos) : sel;
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--color-s%s),	var(--color-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr || n == -tr2 || n == -tr3) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl() {
	background-color: var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{sel-cond(padding, pos)}: \
		(n == 0 ? 0 : pos == 0 ? 0 : var(--pad)) $i;
}

mar(pos =, n = 1) {
	{sel-cond(margin, pos)}: \
		(n == 0 ? 0 : pos == 0 ? 0 : var(--pad)) $i;
}

shd(n) {
	box-shadow: cond(n, s('var(--shadow-%s)', n), none);
}

rad(n = 1) {
	border-radius: cond(n, var(--border-radius), 0);
}

brd(pos =, color = border) {
	if (color) {
		color = svar(color);
	}

	{sel-cond(border, pos)}: \
		(color == 0 ? none : pos == 0 ? none : var(--border-width) solid color) $i;
	if (!pos) {
		rad(pos);
	}
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

flex(display = flex, alignment = center, justification =) {
	display: display $i;
	align-items: alignment $i;
	justify-content: justification $i;
}

// Animation
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(0.2, 0.9, 0.6, 1));
}

// Focus
focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus(class = page-focus) {
	.{class} & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--border: var(--accent-border);
	}

	// Stylus is unable to recognise :where()
	:root:not(:-moz-window-inactive) & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--border: var(--accent-border);
	}
}

normal-colors() {
	// Don't get me affected by header-focus()
	--bg2: var(--reserve-bg2) $i;
	--fg: var(--reserve-fg) $i;
	--fg2: var(--reserve-fg2) $i;
	--border: var(--reserve-border) $i;
}

// Text
replace-text(content =, text-color = fg, pos = after) {
	color: transparent $i;
	letter-spacing: -9999px $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

hide-chars(amount, pos, bg =) {
	margin-{pos}: s('-%sch', amount) $i;
	position: relative $i;

	element = pos == left ? before : after;
	&::{element} {
		content: '' $i;
		position: absolute $i;
		inset: 0;
		box(s('%sch', amount), calc(1em * var(--line-height)));
		bg(bg);
	}
}

// Normalisation
disabled() {
	&:disabled {
		opacity: 0.5 $i;
		cursor: not-allowed $i;
	}
}

normalise-select() {
	appearance: none $i;
	bgc(2);
	lnh();
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 50% $i;
	pad();
	padding-right: calc(var(--pad) + 20px) $i;
	brd();
	focus();
	disabled();
}

normalise-input() {
	bgc(2);
	lnh();
	pad();
	brd();
	focus();
	disabled();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	lnh();
	background-image: none $i;
	padding: var(--pad) calc(var(--pad) * 2) $i;
	brd();
	cursor: pointer $i;
	focus();
	disabled();
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();
	disabled();

	&::-webkit-color-swatch {
		brd(0);
		// Prevent from making it look like a radio input
		border-radius: calc(var(--border-radius) * 0.33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			lnh();
			flex();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	// Prevent from making it look like a radio input
	border-radius: calc(var(--border-radius) * 0.33) $i;
	box-shadow: $select-shadow $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before,
	&::after {
		content: '';
		position: absolute $i;
		inset: 0;
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}
	&:disabled {
		&::before,
		&::after {
			background-color: var(--fg2) $i;
		}
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.3ms $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.3ms $i;
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.3ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: $select-shadow $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		inset: $select-size / 5;
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg2) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header(first = true) {
	fg();
	lnh();
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	pad(bottom);
	brd(bottom);
	mar(0);
	mar(bottom);
	if (!first) {
		margin-top: calc(var(--pad) * 2) $i;
	}
}

@-moz-document domain("soundcloud.com") {
	/**
	 * Variables
	 *
	 * Do NOT use .theme-{dark,light} as some parts use
	 * dark theme only and vice versa.
	**/
	body {
		--background-surface-color: var(--bg) $i;
		--font-primary-color: var(--fg) $i;
		--font-secondary-color: var(--fg2) $i;
		--link-primary-color: var(--fg) $i;
		--link-secondary-color: var(--fg2) $i;
		--primary-color: var(--fg) $i;
		--secondary-color: var(--fg2) $i;
		--surface-color: var(--bg) $i;
		--highlight-color: var(--bg2) $i;

		--button-secondary-hover-font-color: var(--fg) $i;

		for i in 1 2 3 4 5 6 7 8 {
			--spacing-{i}x: var(--pad) $i;
		}
		--spacing-0_25x: var(--pad) $i;
		--spacing-0_5x: var(--pad) $i;
		--spacing-0_75x: var(--pad) $i;
		--spacing-1_25x: var(--pad) $i;
		--spacing-1_5x: var(--pad) $i;
		--spacing-1_75x: var(--pad) $i;
		--spacing-2_5x: var(--pad) $i;
		--spacing-3_5x: var(--pad) $i;

		for i in 4 8 10 16 20 50 100 {
			--borderRadiuses-{i}: var(--border-radius) $i;
		}
	}
	body {
		--big-pad: calc(var(--pad) * 4);

		--reserve-bg: var(--bg);
		--reserve-border: var(--border);
		--reserve-fg: var(--fg);
		--reserve-fg2: var(--fg2);
		--reserve-pad: var(--pad);
	}

	/**
	 * Global
	**/
	* {
		box-sizing: border-box $i;
		line-height: var(--line-height) $i;
	}
	.l-container {
		width: unset $i;
	}
	.sc-artwork:not(.image__rounded) {
		border-radius: var(--border-radius) $i;
	}
	// Don't actually normalise-button() here, everything else will look
	// like total shit
	.sc-button {
		opacity: 1 $i;

		.sc-button-group > &,
		.sc-button-toolbar > & {
			mar(right);
		}

		&:not(&-play) svg {
			box(1lh);
		}
	}
	.sc-button-dropdown {
		normalise-select();

		svg {
			display: none $i;
		}
	}
	.sc-ir {
		font-size: 0 $i;
	}
	.sc-link-secondary:hover {
		fg();
	}
	.sc-ministats {
		& > div {
			margin-right: 2px $i;
			box(1lh);
		}
		svg {
			box(1lh);
		}
	}
	.sc-ministats-comments {
		display: none $i;
	}

	.sc-input {
		normalise-input();
		caret-color: var(--fg) $i;
		height: unset $i;
	}

	.g-tabs-item {
		mar(0);
	}
	.g-tabs-link {
		pad();
		brd(0);

		&.active {
			hl();
		}
	}

	/**
	 * Hide elements
	**/
	.banner,
	.directSupport,
	.dropbar,
	.header__forArtistsButton,
	.header__upsellWrapper,
	.l-footer,
	.listenArtistInfo__report,
	.mobileApps,
	.playbackSoundBadge__follow,
	.playbackSoundBadge__showQueue,
	.sc-button-copylink,
	.sc-button-share,
	.userBadge__actions,
	{
		display: none $i;
	}

	/**
	 * Header
	**/
	.header {
		--fg: var(--reserve-fg);
		--pad: calc(var(--reserve-pad) / 2);
		--primary-color: var(--fg);
		header-focus();
		bg(2);
		brd(bottom);
		height: unset $i;

		&__inner,
		&__left,
		&__right {
			display: flex;
			align-items: center $i;
		}
		&__inner {
			gap: var(--pad) $i;
		}
		&__link {
			normal-colors();
			--bg2: var(--bg) $i;
			normalise-button();
			mar(right);
		}
		&__logoLink {
			height: 22px $i;

			&:not(:hover) svg {
				fg(2);
			}
		}
		&__moreButton {
			pad(0);
			height: unset $i;
		}
		&__moreButtonIcon {
			box(var(--font-size));
		}
		&__navMenuItem {
			--pad: var(--reserve-pad);
			pad();
			mar(0);

			&.selected {
				hl();
				brd(0);
			}
		}
		&__userNav {
			gap: 1ch $i;
			margin-right: 1ch $i;
			align-items: center $i;

			.notificationIcon {
				box(var(--font-size));
			}
		}
		&__userNavAvatar {
			mar(0);
			box(1lh);

			& > span {
				box(inherit);
			}
		}
		&__userNavButton {
			pad(0);
			mar(0);
			height: unset $i;
		}
		&__userNavUsernameButton {
			normal-colors();
			--bg2: var(--bg) $i;
			normalise-select();
		}
		&__userNavUsernameButtonIcon {
			display: none $i;
		}
	}
	.headerSearch {
		--pad: calc(var(--reserve-pad) / 2);
		pad(0);
		mar(0);

		&__input {
			--bg2: var(--bg);
		}
		&__submit {
			display: none $i;
		}
	}

	/**
	 * Play controls
	**/
	.playControls {
		--button-secondary-background-color: transparent;

		&__inner {
			brd(top);
			height: calc(48px - var(--border-width)) $i;
		}
		&__repeat > button > div {
			font-size: 0 $i;
		}
	}

	/**
	 * Context menu
	**/
	.dropdownMenu > div {
		bg();
		brd();
		pad(0);
		shd(big);
	}
	.headerMenu {
		&__link {
			brd(0);

			&:hover {
				hl();
			}
		}
		&__list {
			pad(0);
			brd(bottom);
		}
	}
	.linkMenu {
		@extend .dropdownMenu > div;

		&__item {
			mar(0);
		}
		&__link {
			@extend .headerMenu__link;

			letter-spacing: 0 $i;
			text-transform: none $i;
			pad();
		}
		&__list {
			pad(0);
		}
	}

	/**
	 * Content
	**/
	.l-content {
		padding-top: var(--header-h) $i;
	}
	.l-sidebar-right {
		left: 0 $i;
		width: var(--sidebar-width) $i;
	}
	.l-fluid-fixed .l-main {
		padding: var(--body-pad) $i;
		margin-inline: var(--sidebar-width) 0 $i;
	}
	.l-listen-wrapper {
		.l-about-main {
			@extend .l-fluid-fixed .l-main;
		}
		.l-about-rows {
			pad(0);
		}
		.l-sidebar-right {
			bg(2);
			pad();
			brd(right);
			top: 0 $i;
		}
	}
	.l-three-column {
		.l-main {
			@extend .l-listen-wrapper .l-about-main;
		}
		// Release info
		.l-sidebar-left {
			display: none $i;
		}
		.l-sidebar-right {
			@extend .l-listen-wrapper .l-sidebar-right;
			// TODO: inaccurate
			top: calc(
				var(--pad) * -6 \
				- var(--border-width) * 7 \
				- 2lh \
				- var(--body-pad)
			) $i;
		}
	}
	.sound {
		&__body {
			pad(0);

			// Actually I never used this lol
			.commentForm {
				display: none $i;
			}
		}
		&__content {
			display: flex;
			flex-direction: column;
			justify-content: space-between;
		}
		&__coverArt {
			box(var(--artwork-20x-size));
		}
	}
	.soundActions {
		&__medium .sc-button {
			--pad: calc(var(--reserve-pad) / 2);
			normalise-button();

			&.sc-button-selected {
				hl();
			}
		}
	}
	.soundList {
		&__item {
			margin-bottom: var(--big-pad) $i;
		}
	}
	.soundTitle {
		&__uploadTime {
			mar(0);
		}

		.actorUser__username {
			display: flex $i;
		}
	}
	// ty soundcloud
	.spotlightTitle,
	.userstream__header {
		normalise-header();
	}

	// Common components
	.commentForm {
		// Avatar size
		--artwork-4x-size: calc(
			var(--pad) * 2 + var(--border-width) * 2 + 1lh
		);

		&__avatar {
			mar(0);
		}
		&__submitButton {
			normalise-button();
		}
		&__wrapper {
			pad(0);
			pad(bottom);
			brd(bottom);
			mar(bottom);
		}
	}

	// Sidebar
	.sidebarHeader {
		normalise-header();

		&__more {
			fg(2);

			&:hover {
				fg();
				text-decoration: none;
			}
		}
	}
	.sidebarModule {
		margin-bottom: calc(var(--pad) * 2) $i;

		&__webiEmbeddedModule {
			mar(0);
			margin-bottom: calc(var(--pad) * 2) $i;
		}
	}
	.userSidebar {
		bg(2);
		pad();
		brd(right);

		&.l-fixed {
			overflow-y: scroll $i;
			width: inherit $i;
			height: calc(
				100vh - var(--header-h) - 48px + var(--border-width)
			) $i;
			top: var(--header-h) $i;
			bottom: 48px $i;
		}
	}
	.l-sidebar-right {
		.sc-button {
			--bg2: var(--bg);
			normalise-button();
		}

		.commentBadgeList__item {
			pad(0);

			&:not(:last-child) {
				margin-bottom: calc(var(--pad) * 2) $i;
			}
		}
		.infoStats {
			mar(0);
			margin-bottom: calc(var(--pad) * 2) $i;
		}
		.soundBadge {
			pad(0);

			&List__item:not(:last-child) {
				mar(bottom);
			}
		}
		.truncatedUserDescription__wrapper {
			&::after {
				background-image: linear-gradient(
					transparent,
					var(--bg2)
				) $i;
			}
		}
		.usersList.floating.user-avatar-badge-hover {
			pad(0);
		}
		.usersList__item {
			pad(0);

			&:not(:last-child) {
				mar(bottom);
			}
		}
	}

	/**
	 * Album/track
	**/
	.commentItem {
		pad(0);

		&__createdAt,
		&__timestamp {
			fg(2);
		}
		&__content {
			.commentsList__item:not(:last-child) & {
				brd(bottom);
			}
		}
		&__controls {
			height: unset $i;
		}
	}
	.commentsList {
		&__header {
			normalise-header();
			align-items: end $i;

			.sc-button-dropdown {
				mar(0);
			}
		}
		&__title {
			pad(0);
		}
	}
	.fullHero {
		--hero-height: calc(var(--sidebar-width) - var(--pad) * 2);
		--artwork-40x-size: var(--hero-height);
		--artwork-spacing: calc(var(--artwork-40x-size) + var(--big-pad));
		mar(0);
		height: calc(var(--hero-height) + var(--pad) * 2);

		&__artwork {
			left: var(--pad) $i;
			right: unset $i;
		}
		&__foreground {
			pad(right);
			padding-left: var(--artwork-spacing) $i;
		}
		&__info {
			left: unset $i;
			right: var(--pad) $i;
		}
		&__playerArea {
			left: var(--artwork-spacing) $i;
			right: var(--pad) $i;
		}
	}
	.listenContent {
		&__inner {
			mar(0);
		}
	}
	.listenDetails {
		&__partialInfo {
			pad(0);

			p {
				mar(0);
			}
		}
	}
	.listenEngagement {
		&__footer {
			pad(0);
			min-height: unset $i;
		}
	}
	.l-listen-hero .soundTitle {
		&__title {
			top: 0 $i;
		}
		&__usernameTitleContainer {
			bottom: 0 $i;
		}
	}
	.l-listen__mainContent {
		--second-sidebar-width: 120px;

		& > .l-about-left {
			pad(0);
			width: var(--second-sidebar-width) $i;
		}
		& > .l-about-right {
			padding-left: calc(
				var(--second-sidebar-width) + var(--big-pad)
			) $i;
		}
	}
	.purchaseSection {
		pad();
		brd();
		mar(0);
		mar(bottom);
		align-items: start $i;

		&__content {
			gap: 0 $i;

			h3 {
				normalise-header();
			}
		}
		&__creatorAvatar {
			display: none $i;
		}
		&__link {
			background-color: transparent $i;
			fg(-link);
			pad(0);
			min-height: unset $i;

			&:hover {
				text-decoration: underline $i;
			}

			svg {
				display: none $i;
			}
		}
	}
	.listenContent .visualSound__wrapper {
		--offset: calc(var(--sidebar-width) + var(--body-pad));

		.commentForm,
		.sound__footer {
			margin-left: var(--offset) $i;
			width: calc(100% - var(--offset) - var(--body-pad)) $i;
		}
		.commentForm {
			margin-top: calc(24px + var(--body-pad)) $i;
			display: block $i;
		}
		.sound__footer {
		}
	}

	/**
	 * User liked tracks
	**/
	.l-fixed-top-one-column {
		pad(0);

		& > .l-top {
			bg(2);
			pad(0);
			brd(bottom);
			top: var(--header-h) $i;
			width: 100% $i;
			min-height: unset $i;
		}
	}
	.userNetwork {
		margin-top: var(--header-h) $i;

		&Info {
			mar(0);

			.userAvatarBadge,
			.userNetworkTop__title {
				display: none $i;
			}
		}
		&Tabs {
			mar(0);
		}
		&__subheadlineWrapper {
			display: none $i;
		}
	}

	/**
	 * Library > Likes
	**/
	.l-nav {
		bg(2);
		brd(bottom);
		mar(0);
	}
	.badgeList {
		mar(0);

		&__item {
			mar(top, 0);
			mar(bottom);
		}
	}
	.collection__section {
		margin: var(--body-pad) $i;
	}
	.collectionSection {
		&__action {
			mar(0);
		}
		&__subHeading {
			align-self: end $i;
		}
		&__top {
			normalise-header();
		}
	}
	.listDisplayToggle {
		&__options {
			background-color: var(--border) $i;
			gap: var(--border-width) $i;
			brd();
			mar(right);

			& > li {
				mar(0);
			}
		}
		&__title {
			//display: none $i;
		}
		.sc-button {
			brd(0);

			&.sc-button-selected {
				hl();
			}
		}
	}
	.playableTile {
		&__mainHeadingIcon {
			display: none $i;
		}
	}

	/**
	 * Profile
	**/
	.l-user-hero {
		pad(0);
		margin: 32px auto $i;
		// Original
		width: 1240px $i;
	}
	.profileHeader {
		// Original
		padding: 32px $i;
	}
	.userInfoBar {
		bg(2);
		pad(0);
		pad(right);
		brd(bottom);

		.sc-button {
			background-color: transparent $i;
			pad(0);
			min-width: unset $i;
			min-height: unset $i;

			&:not(:hover) {
				fg(2);
			}
		}
		.sc-button-label {
			display: none $i;
		}
	}
}
