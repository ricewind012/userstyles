/* ==UserStyle==
@name           Other websites
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    gay
@author         Me

@preprocessor stylus
==/UserStyle== */

// Variables
vendors = official;
$small-screen = 768px;
$select-shadow = inset 0 1px 2px rgba(0, 0, 0, 0.1);
$select-size = 16px;
$i = !important;

// Stylus
svar(var) {
	s('var(--%s)', var);
}

cond(n, yes, no) {
	(n == 0 ? no : yes) $i;
}

sel-cond(sel, pos) {
	pos ? s('%s-%s', sel, pos) : sel;
}

color-a(n, bright = true) {
	s = bright ? -2 : null;
	n = n > 6 ? n - 8 : n;

	s('hsla(var(--color%s-h),	var(--colorscheme-s%s),	var(--colorscheme-l%s), var(--bg-opacity))', n, s, s);
}

// Appearance
bg(n =) {
	background-color: s('var(--bg%s)', n) $i;

	if (n == -tr || n == -tr2 || n == -tr3) {
		backdrop-filter: var(--popup-filter) $i;
	}
}

fg(n =) {
	color: s('var(--fg%s)', n) $i;
}

bgc(n1 =, n2 =) {
	bg(n1);
	fg(n2);
}

hl() {
	background-color: var(--hl) $i;
	color: var(--hl-fg) $i;
}

accent() {
	background-color: var(--accent) $i;
	color: var(--accent-fg) $i;
}

clr(n) {
	color: s('var(--color%s)', n) $i;
}

lnh() {
	line-height: var(--line-height) $i;
}

pad(pos =, n = 1) {
	{sel-cond(padding, pos)}: \
		(n == 0 ? 0 : pos == 0 ? 0 : var(--pad)) $i;
}

mar(pos =, n = 1) {
	{sel-cond(margin, pos)}: \
		(n == 0 ? 0 : pos == 0 ? 0 : var(--pad)) $i;
}

shd(n) {
	box-shadow: cond(n, s('var(--shadow-%s)', n), none);
}

rad(n = 1) {
	border-radius: cond(n, var(--border-radius), 0);
}

brd(pos =, color = border) {
	if (color) {
		color = svar(color);
	}

	{sel-cond(border, pos)}: \
		(color == 0 ? none : pos == 0 ? none : var(--border-width) solid color) $i;
	if (!pos) {
		rad(pos);
	}
}

// Position
box(w, h = w) {
	width: w $i;
	height: h $i;
}

flex(display = flex, alignment = center, justification =) {
	display: display $i;
	align-items: alignment $i;
	justify-content: justification $i;
}

// Animation
anim(name =, func = ) {
	@media (prefers-reduced-motion: no-preference) {
		{name ? animation : transition}: name var(--trans-dur) func $i;
	}
}

dropfade() {
	anim(dropfade, cubic-bezier(0.2, 0.9, 0.6, 1));
}

// Focus
focus(p = focus) {
	anim();

	&:{p} {
		border-color: var(--hl) $i;
		box-shadow: var(--shadow-ins) var(--hl) $i;
		outline: none $i;
	}
}

header-focus(class = page-focus) {
	.{class} & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--border: var(--accent-border);
	}

	// Stylus is unable to recognise :where()
	:root:not(:-moz-window-inactive) & {
		--bg2: var(--accent);
		--fg: var(--accent-fg);
		--border: var(--accent-border);
	}
}

// Text
replace-text(content =, text-color = fg, pos = after) {
	color: transparent $i;
	letter-spacing: -9999px $i;

	if (content) { // Replace
		&::{pos} {
			content: content $i;
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	} else { // Hide
		* {
			letter-spacing: 0 $i;
			color: svar(text-color) $i;
		}
	}
}

hide-chars(amount, pos, bg =) {
	margin-{pos}: s('-%sch', amount) $i;
	position: relative $i;

	element = pos == left ? before : after;
	&::{element} {
		content: '' $i;
		position: absolute $i;
		inset: 0;
		box(s('%sch', amount), calc(1em * var(--line-height)));
		bg(bg);
	}
}

// Normalisation
disabled() {
	&:disabled {
		opacity: 0.5 $i;
		cursor: not-allowed $i;
	}
}

normalise-select() {
	appearance: none $i;
	bgc(2);
	lnh();
	background-image:
		linear-gradient(55deg, var(--bg2) 43%, transparent 45%),
		linear-gradient(125deg, transparent 53%, var(--bg2) 55%),
		linear-gradient(180deg, var(--bg2) 30%, var(--fg) 30%) $i;
	background-size: 20px 20px $i;
	background-repeat: no-repeat $i;
	background-position: right 50% $i;
	pad();
	padding-right: calc(var(--pad) + 20px) $i;
	brd();
	focus();
	disabled();
}

normalise-input() {
	bgc(2);
	lnh();
	pad();
	brd();
	focus();
	disabled();

	&::placeholder {
		fg(2);
	}
}

normalise-button() {
	bgc(2);
	lnh();
	background-image: none $i;
	padding: var(--pad) calc(var(--pad) * 2) $i;
	brd();
	cursor: pointer $i;
	focus();
	disabled();
}

normalise-color() {
	bg(2);
	pad(0);
	brd();
	box($select-size);
	focus();
	disabled();

	&::-webkit-color-swatch {
		brd(0);
		// Prevent from making it look like a radio input
		border-radius: calc(var(--border-radius) * 0.33) $i;

		&-wrapper {
			pad(0);
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			lnh();
			flex();
			gap: 1ch $i;
		}
	}

	appearance: none $i;
	bg(2);
	brd();
	// Prevent from making it look like a radio input
	border-radius: calc(var(--border-radius) * 0.33) $i;
	box-shadow: $select-shadow $i;
	mar(0);
	position: relative $i;
	box($select-size);
	min-width: $select-size $i;
	focus();

	&::before, &::after {
		content: '';
		position: absolute $i;
		inset: 0;
		background-color: var(--hl) $i;
		transform-origin: 0 0 $i;
	}
	&:disabled {
		&::before, &::after {
			background-color: var(--fg2) $i;
		}
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0) $i;
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25) $i;
		transition-duration: 33.3ms $i;
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0) $i;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4) $i;
			transition-duration: 33.3ms $i;
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2) $i;
			transition-delay: 33.3ms $i;
			anim();
		}
	}
}

normalise-radio() {
	appearance: none $i;
	bg(2);
	brd();
	border-radius: 50% $i;
	box-shadow: $select-shadow $i;
	mar(0);
	position: relative $i;
	box($select-size);
	focus();

	&::before {
		content: '';
		position: absolute $i;
		inset: $select-size / 5;
		background-color: var(--hl) $i;
		border-radius: 50% $i;
		transition: transform var(--trans-dur) linear $i;
		transform: scale(0) $i;
	}
	&:disabled::before {
		background-color: var(--fg2) $i;
	}
	&:checked::before {
		transition-timing-function: cubic-bezier(0, 0, 0.3, 1.5) $i;
		transform: scale(1) $i;
		anim();
	}
}

normalise-header(first = true) {
	fg();
	lnh();
	text-transform: uppercase $i;
	letter-spacing: 1px $i;
	pad(0);
	pad(bottom);
	brd(bottom);
	mar(0);
	mar(bottom);
	if (!first) {
		margin-top: calc(var(--pad) * 2) $i;
	}
}

@-moz-document domain("deviantart.com") {
	// DeviantArt

	// Remove elements
	//[aria-label="Navigation menu"],
	footer,
	{
		display: none !important;
	}

	// Not logged in
	header > :last-child, // Submit button
	[data-hook="action_bar"],
	[data-hook="user_watch_button"],
	[id^="comment-"].no-theme-skin > div,
	[href="https://www.deviantart.com/join/"],
	[href="https://www.deviantart.com/users/login"],
	[href="https://www.deviantart.com/core-membership"]
	{
		display: none !important;
	}

	// Global
	.theme-dark {
		// Background
		--D1: var(--bg);
		--D2: var(--bg);
		--D3: var(--bg);
		--D4: var(--bg2);
		--D5: var(--fg2);
		--D6: var(--fg2);
		--D7: var(--fg);
		--D8: var(--fg);
		--D9: var(--bg3);

		// Text
		--L1: var(--fg);
		--L2: var(--fg);
		--L3: var(--fg);
		--L4: var(--fg2);
		--L5: var(--fg2);
		--L6: var(--fg2);
		--L7: var(--fg2);
		--L8: var(--fg2);
		--L9: var(--fg2);

		// etc.
		--C14: var(--accent); // accent
		--AS39: none; // deviation top gradient
		--G4: var(--fg-link); // links

		// sorted ones
		--g-brand: var(--hl);
		--g-theme-primary: var(--bg);
		--g-theme-secondary: var(--bg2);
		--g-theme-tertiary: var(--bg3);
		--g-theme-primary-opposite: var(--fg);
		--g-theme-secondary-opposite: var(--fg2);
		--g-theme-tertiary-opposite: var(--fg3);

		--g-typography-primary: var(--fg);
		--g-typography-secondary: var(--fg2);
		--g-typography-tertiary: var(--fg3);

		--g-bg-primary: var(--bg);
		--g-bg-secondary: var(--bg2);
		--g-bg-tertiary: var(--bg3);

		--g-divider1: var(--border);
		--g-divider2: var(--border);
		--g-divider3: var(--border);
		--g-divider-fill: var(--border);
		--g-stroke-default: var(--border);
		--g-stroke-hover: var(--border);
	}

	// Header
	[role="banner"] {
		bg(2);
		header-focus();
		brd(bottom);
		shd(0);
		//height: var(--header-h);

		* {
			color: var(--accent-fg);
		}

		& > div > span { // Border before search
			display: none;
		}

		& + div {
			//padding-top: var(--header-h);
		}
	}
	[href="https://www.deviantart.com"] > div {
		mar(left);
		mar(right);
	}
	[action="https://www.deviantart.com/search"] > div > div {
		all: unset;
	}
	#search-input {
		normalise-input();
		bg();

		& + span {
			display: none;
		}
	}
	[data-hook="all_content"] > div > div {
		--site-margin: var(--body-pad);
		--site-margin-top: var(--body-pad);

		& > :first-child {
			normalise-header();

			& > * {
				mar(0);
			}
		}
	}
	[role="complementary"] { // Suggested collections
		background: none var(--bg2) !important;
	}
}

@-moz-document domain("twitter.com") {
	// Twitter

	// Remove elements
	[role="main"] + [role="progressbar"], .css-1dbjc4n.r-yfoy6g.r-18bvks7.r-1867qdf.r-1phboty.r-rs99b7.r-1ifxtd0.r-1udh08x,
	.gt2-dashboard-profile ~ :last-child // Footer
	{
		display: none;
	}
	
	// Not logged in
	.gt2-dashboard-profile + div, // Sign up
	[aria-label^="Follow @"]
	{
		display: none;
	}

	// Colors
	:root {
		--color-bg: var(--bg);
		--color-elem: var(--bg2);
		--color-elem-sel: var(--hl);
		--color-gray-dark: var(--border);
		--color-gray-dark-2: var(--border);
		--color-gray-light: var(--fg);
		--color-navbar: var(--accent);
		--color-text: var(--fg);
		--color-text-2: var(--fg);
		--color-blue: var(--color15);
		--color-green: var(--color10);
		--color-red: var(--color9);
		--color-red-dark: var(--color1);
		--color-yellow: var(--color11);
		--color-shadow: var(--shadow-clr);
	}

	.gt2 {
		&-legacy-profile-banner > img {
			transform: none !important;
		}
		&-opt-legacy-profile&-page-profile&-scrolled-down-banner &-legacy-profile {
			&-banner {
				height: 0 !important;
			}
			&-nav {
				margin-top: 47px !important;
			}
		}

		&-legacy-profile-nav,
		&-nav {
			brd(bottom);
		}
		&-opt-legacy-profile&-page-profile [data-testid=primaryColumn]>div>div:nth-child(1) {
			height: 0;
		}
	}

	[data-testid="primaryColumn"] {
		bg(2);
		brd();
	}
	[aria-label="Profile timelines"],
	[aria-label^="Timeline: "] > div > div > div {
		brd(bottom);
	}
}

@-moz-document domain('soundcloud.com') {
	:root {
		--page-width: 1180px;
	}

	/* Variables */
	:root {
		--background-inverted: #0d0d0d; // old header

		// New ones to be used(?)
		--background-surface-color: var(--bg); // body
		--background-dark-color: var(--fg); // inverted?
		--font-primary-color: var(--fg);
		--font-secondary-color: var(--fg2);
		--spacing-1x: 8px; // wtf
		--spacing-2x: 16px;
		--spacing-3x: 24px;

		// Custom
		--orange: #f50;
		--orange2: #f30;
		--text3: #999;
		--text4: #ccc;
	}

	/* Remove elements */
	.relatedList__explanation,
	.userNetwork__subheadlineWrapper,
	.callout,
	.calloutBackground,
	.directSupport,
	.featuredProfiles,
	.searchOptions__footer,
	.l-footer,
	.listenArtistInfo__copyright,
	.sc-button-copylink, // Copy track link
	.sound .commentForm, .listenEngagement__commentForm,
	.listenDetails__login {
		display: none !important;
	}

	/* Fix soundcloud's shit
	 * only from app-1ef58cd5e2fd6e170cb1.css
	 */
	body {
		background: var(--background-surface-color) none !important;
		color: var(--font-primary-color) !important;
	}
	button, input, select, textarea {
		color: var(--font-primary-color) !important;
	}
	.sc {
		&-background {
			&-blue { background-color: var(--text-link) !important; }
			&-darkgrey { background-color: var(--font-primary-color) !important; }
			&-grey { background-color: var(--font-secondary-color) !important; }
			&-lightgrey { background-color: var(--text3) !important; }
			&-white { background-color: var(--background-surface-color) !important; }
			&-dark { background-color: var(--bg3) !important; }
			&-light { background-color: var(--bg2) !important; }
		}
		&-link {
			&-dark { color: var(--font-primary-color) !important; }
			&-medium { color: var(--font-secondary-color) !important; }
			&-light { color: var(--text3) !important; }
			&-verylight { color: var(--text-muted2) !important; }
			&-white { color: var(--background-surface-color) !important; }
		}
		&-text {
			color: var(--font-primary-color) !important;
			&-light { color: var(--text3) !important; }
			&-verylight { color: var(--text4) !important; }
			&-link { color: var(--text-link) !important; }
			&-orange { color: var(--orange) !important; }
		}

		// secondary bg
		&-button {
			&-disabled,
			&-disabled:focus,
			&-disabled:hover,
			&.sc-pending,
			&.sc-pending:focus,
			&.sc-pending:hover,
			&:disabled,
			&:disabled:hover,
			&-medium&-white&-disabled&-mastering {
				background-color: var(--bg2) !important;
				border-color: var(--border) !important;
				color: var(--text4) !important
			}
		}
		&-upsell-container {
			background-color: var(--bg2) !important;
			border-color: var(--border) !important;
		}
		&-checkbox-check,
		&-label,
		&-radio-radio,
		&-radio-input:checked:disabled + &-radio-radio
		&-radio:hover &-radio-input:checked:disabled + &-radio-radio {
			background-color: var(--bg2) !important;
		}
		&-radio-input:checked + &-radio-radio {
			box-shadow: inset 0 0 0 2px var(--bg2) !important;
		}
		&-radio-input:checked:focus + &-radio-radio {
			box-shadow: inset 0 0 0 3px var(--bg2) !important;
		}

		// Borders
		border-colors = {
			dark: var(--bg3),
			light: var(--bg2),
			orange: var(--orange)
		}
		for k, v in border-colors {
			&-border-{k} {
				border-color: v !important;

				&-top { border-top-color: v !important; }
				&-right { border-right-color: v !important; }
				&-bottom { border-bottom-color: v !important; }
				&-left { border-left-color: v !important; }
			}
		}

		// --font-primary-color
		&-buylink:hover,
		&-link-dark:hover,
		&-link-medium:hover,
		&-snippet-badge {
			color: var(--font-primary-color) !important;
		}

		&-button {
			background-color: var(--background-surface-color) !important;
			color: var(--font-primary-color) !important;
			border-color: var(--bg3) !important;

			&-apple {
				&, &:focus, &:hover, &:visited {
					background-color: var(--font-primary-color) !important;
					color: var(--background-surface-color) !important;
					border-color: var(--font-primary-color) !important;
				}
			}
		}

		// --font-secondary-color
		&-checkbox-input:focus + &-checkbox-check,
		&-checkbox:hover &-checkbox-check,
		&-radio-input:focus + &-radio-radio,
		&-radio:hover &-radio-radio,
		&-tag:hover,
		&-button-text:focus, &-button-text:hover,
		.g-dark &-button:not(&-button-cta),
		.g-dark &-button:not(&-button-primary) {
			border-color: var(--font-secondary-color) !important;
		}

		&-tag {
			&:hover {
				background-color: var(--font-secondary-color) !important;
			}
			&, &:visited {
				background-color: var(--text3) !important;
				border-color: var(--text3) !important;
			}
			&:focus {
				outline: thin dotted var(--font-secondary-color) !important;
			}
		}

		// --text3 (tertiary?)
		&-radio-radio,
		&-checkbox-check,
		&-checkbox-input:disabled + &-checkbox-check,
		&-checkbox:hover &-checkbox-input:disabled + &-checkbox-check {
			border-color: var(--text3) !important;
		}
		&-label, &-label:hover, &-label:visited,
		&-ministats, &-ministats-small, &-ministats-light:hover,
		&-snippet-badge-grey,
		&-type-light,
		&-button-text {
			color: var(--text3) !important;
		}
		.g-oscp-section-header::before {
			background-color: var(--background-dark-color) !important;
			color: var(--background-surface-color) !important;

			~/-text-secondary&,
			~/-type-light& {
				background-color: var(--text3) !important;
			}
		}

		// --orange(2)
		&-button {
			// --orange
			~/-orange,
			~/-text-orange,
			&-active, &-selected {
				color: var(--orange) !important;
			}
			&-active&-focus,
			&-active:focus,
			&-active:hover,
			&-selected&-focus,
			&-selected:focus,
			&-selected:hover {
				color: var(--orange) !important;
				border-color: var(--orange) !important;
			}
			&-cta, &-cta:focus, &-cta:hover, &-cta:visited,
			&&-white:focus, &&-white:hover,
			&-dropdown&-active:not(&-dropdown-plain),
			&-dropdown:hover:not(&-dropdown-plain) {
				background-color: var(--orange) !important;
				border-color: var(--orange) !important;
				color: var(--hl-text) !important;
			}
			&&-white {
				background-color: var(--hl-text) !important;
				color: var(--orange) !important;
				border-color: var(--orange) !important;
			}
			&-follow&-selected {
				border-color: var(--orange) !important;
			}
			&-dropdown:not(&-disabled):not(:disabled) {
				border-color: var(--orange) !important;
				color: var(--orange) !important;
			}
			&-dropdown::after {
				border-right-color: var(--orange) !important;
				border-bottom-color: var(--orange) !important;
			}
			&-next,
			&-pause,
			&-play,
			&-prev,
			&&-blocked,
			&&-play&-disabled:disabled,
			&&-play:disabled,
			&&-play:disabled:hover {
				background-color: var(--orange) !important;
			}

			// --orange2
			&-next&-focus,
			&-next:focus,
			&-next:hover,
			&-pause&-focus,
			&-pause:focus,
			&-pause:hover,
			&-play&-focus,
			&-play:focus,
			&-play:hover,
			&-prev&-focus,
			&-prev:focus,
			&-prev:hover {
				background-color: var(--orange2) !important;
			}
			&-next:active,
			&-pause:active,
			&-play:active,
			&-prev:active {
				background-color: var(--orange2) !important;
				border-color: var(--orange2) !important;
			}
		}

		&-label {
			&&-private {
				background-color: var(--orange) !important;

				&-ghost {
					color: var(--orange) !important;
				}
			}
		}
		&-tag-selected {
			&, &:hover, &:visited {
				background-color: var(--orange) !important;
				border-color: var(--orange) !important;
			}
			&::before, &:hover::before {
				border-color: transparent var(--orange) transparent transparent !important;
			}
		}
		&-toggle::before {
			background: var(--orange) !important;
		}
	}
	.g {
		&-dark {
			input[type="password"],
			input[type="search"],
			input[type="text"],
			select, textarea {
				color: var(--font-secondary-color) !important;
			}

			.sc-button {
				&:not(^[1..-1]-cta):focus,
				&:not(^[1..-1]-cta):hover,
				&:not(^[1..-1]-primary):focus,
				&:not(^[1..-1]-primary):hover {
					border-color: var(--text3) !important;
				}
				&-selected:not(^[1..-1]-cta),
				&-selected:not(^[1..-1]-primary),
				&-selected:not(^[1..-1]-cta):focus,
				&-selected:not(^[1..-1]-cta):hover,
				&-selected:not(^[1..-1]-primary):focus,
				&-selected:not(^[1..-1]-primary):hover {
					color: var(--orange) !important;
				}
			}
			input[type="password"],
			input[type="search"],
			input[type="text"],
			select, textarea {
				&::-webkit-input-placeholder,
				&:-moz-placeholder {
					color: var(--text3) !important;
				}
			}
			for i in (1..3) {
				.sc-text-h{i},
				.sc-type-h{i},
				h{i} {
					color: var(--text3) !important;
				}
			}
		}

		&-oscp-section,
		.sc-classic &-tabs,
		.sc-classic &-modal-title-h1 {
			border-bottom-color: var(--bg2) !important;
		}
		&-type-shrinkwrap-large-secondary a:hover
		&-type-shrinkwrap-large-secondary a:visited:hover
		&-type-shrinkwrap-secondary a:hover
		&-type-shrinkwrap-secondary a:visited:hover
		a&-type-shrinkwrap-large-secondary:hover
		a&-type-shrinkwrap-large-secondary:visited:hover
		a&-type-shrinkwrap-secondary:hover
		a&-type-shrinkwrap-secondary:visited:hover,
		a&-type-shrinkwrap-large-primary
		a&-type-shrinkwrap-large-primary:visited
		a&-type-shrinkwrap-primary
		a&-type-shrinkwrap-primary:visited {
			color: var(--bg2) !important;
		}
		&-dark,
		.sc-classic &-form-section-title,
		.sc-classic &-tabs-link &-tabs-subheading,
		.sc-classic &-avatar-badge-avatar-link {
			color: var(--text3) !important;
		}

		// --orange(2)
		&-tabs {
			.sc-classic &-link.active {
				border-color: var(--orange) !important;
				color: var(--orange) !important;
			}
			&-link.active &-subheading {
				color: var(--orange) !important;
			}
		}
		&-button-premium-pro-unlimited {
			&, &:focus, &:hover {
				background-color: var(--orange) !important;
				border-color: var(--orange) !important;
			}
		}
		&-type-marketing {
			&::after {
				background-color: var(--orange) !important;
			}
			&-header::after {
				background-image: linear-gradient(90deg, #7d01a1, var(--orange2) 50%, var(--orange)) !important;
			}
		}
	}
	::-webkit-input-placeholder,
	:-moz-placeholder,
	:focus {
		/button[disabled],
		/input[disabled],
		input[type="date"]&,
		input[type="email"]&,
		input[type="password"]&,
		input[type="search"]&,
		input[type="tel"]&,
		input[type="text"]&,
		input[type="url"]&,
		select&, textarea& {
			color: var(--text3) !important;
		}
	}

	/* Header */
	.header {
		background-color: var(--background-surface-color) !important;

		.loginButton {
			color: var(--font-primary-color) !important;
		}

		&__navMenu > li {
			& > a {
				border-right-color: var(--border) !important;
				color: var(--font-primary-color) !important;

				&.selected {
					color: var(--font-primary-color) !important;
					background-color: var(--bg2) !important;

					&:hover {
						cursor: default;
					}
				}

				&:not(.selected) {
					&:focus, &:hover {
						box-shadow: inset 0 -1px var(--font-primary-color);
						color: var(--font-primary-color) !important;
					}
				}
			}

			& > .header__moreButton {
				~/__userNavUsernameButton::after,
				.notificationIcon::before,
				& {
					filter: invert();
					opacity: .5 !important;
				}

				&:hover {
					box-shadow: none !important;
				}

				&:hover,
				&.selected {
					opacity: .75 !important;
				}

				&.selected {
					background-color: var(--background-inverted) !important;
				}
			}
		}

		&__right > div > a {
			color: var(--font-primary-color) !important;

			&.selected {
				background-color: var(--bg2) !important;
			}

			&:not(.selected) {
				&:focus, &:hover {
					box-shadow: 0 1px var(--font-primary-color);
				}
			}
		}
	}

	/* Content width */
	/*body.sc-classic {
		background: var(--background-secondary) !important;

		.l-container {
			background-color: var(--background);
			width: var(--page-width);
		}
	}
	.l-fluid-fixed .l-main {
		padding-top: 0 !important;
		margin: 0 330px 0 auto;
		/*width: calc(var(--page-width) - 355px);
		width: calc(100% - 355px);
	}

	/* Remove right sidebar on small resolutions */
	/*@media (max-width: 1079px) {
		.l-sidebar-right {
			display: none !important;
		}
		.l-main {
			border-right: none !important;
			padding-right: 0 !important;
			margin: 0 auto !important;
			width: calc(var(--page-width) - 28%) !important;
		}
	}

	/* etc. */
	.searchOptions__navigationItem:not(.active):hover {
		background-color: var(--bg2);
	}
	.l-collection > .l-nav {
		margin: 20px 0 !important;
	}
	.spotlight:empty + h3 {
		padding-top: 0 !important;
	}
	.userstream__header {
		margin: 20px 0 !important;
	}
	a[title="Pro Unlimited"] > span {
		border-radius: 0 !important;
	}
}

