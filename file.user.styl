/* ==UserStyle==
@name           file://
@namespace      github.com/openstyles/stylus
@version        1.0.0
@description    A new userstyle
@author         Me

@preprocessor stylus
==/UserStyle== */

replace-text(content, text-color = var(--fg), pos = after) {
	& {
		letter-spacing: -9999px;
		color: transparent !important;
		background-color: transparent !important;

		&::{pos} {
			content: content;
			letter-spacing: 0;
			color: text-color;
		}
	}
}

normalise-checkbox(label = true) {
	if (label) {
		/label {
			display: flex;
			align-items: center;
			gap: 1ch;
		}
	}

	appearance: none;
	background-color:var(--bg2);border:var(--border-width) solid var(--border);
	border-radius: calc(var(--border-radius) * .33);
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
	margin: 0;
	position: relative;
	width: 16px;
	height: 16px;
	min-width: 16px;

	&::before, &::after {
		content: '';
		position: absolute;
		left:0;right:0;top:0;bottom:0;
		background-color: var(--hl);
		transform-origin: 0 0;
	}

	&::before {
		transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0);
	}
	&::after {
		transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(0);
	}
	&:indeterminate::before {
		transform: rotate(0) translateY(37.5%) translateX(10%) scaleX(0.8) scaleY(0.25);
		transition-duration: 33.33333333ms;
	}

	&:checked {
		&::before {
			transform: rotate(-45deg) translateY(45%) translateX(-30%) scaleX(0.25) scaleY(0.4);
			transition-duration: 33.33333333ms;
		}
		&::after {
			transform: rotate(225deg) translateY(-30%) translateX(-95%) scaleX(0.25) scaleY(1.2);
			transition-delay: 33.33333333ms;
			anim();
		}
	}
}

@-moz-document regexp("file://.*/"), regexp("https?://.*(jpe?g|png|web[pm])\\.$") {
	body {
		background-color: var(--bg);
		color: var(--fg);
		line-height: var(--line-height);
		margin: 0;
	}

	a {
		--icon-size: 16px;
		color: var(--fg);
		display: block;
		padding-left: calc(var(--icon-size) + 1ch) !important;
	}

	#header {
		display: none;
	}

	#parentDirLink {
		padding-top: 0;
		display: flex;
		align-items: center;

		&Box {
			background-color: var(--accent);
			color: var(--accent-fg) !important;
			padding: var(--pad);
			border-bottom: var(--border-width) solid var(--accent-border);
			margin-bottom: 0;
			display: flex !important;
			gap: var(--pad);
		}

		& > span {
			replace-text('Parent directory', var(--accent-fg));
		}
	}

	table {
		display: block;
		margin: var(--body-pad);
	}

	.icon {
		background-position: left !important;
	}

	// sort & filter
	#theader {
		width: unset;
		gap: 1ch;
		display: inline-flex !important;
		align-items: center;
		position: absolute;
		right: var(--pad);
		top: var(--pad);

		&::before {
			content: 'Sort by: ' ;
			color: var(--accent-fg);
		}

		& > th {
			display: flex;
			color: var(--accent-fg);

			&:hover {
				text-decoration: underline;
			}
			&:not(:last-child)::after {
				content: ', ';
				display: inline-block;
			}
		}
	}

	input[placeholder] {
		padding: 0;
	}
	input[type="checkbox"] {
		normalise-checkbox();
	}
}

